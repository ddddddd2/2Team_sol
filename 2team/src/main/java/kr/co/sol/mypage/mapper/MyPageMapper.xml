<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.sol.mypage.dao.MyPageDAO">
  	<select id="idCheck" parameterType="string"  resultType="int">
    	select count(id) cnt from member where id = #{id}
  	</select>

  	<select id="loginPro" parameterType="mdto" resultType="mdto">
  		select no, role from member where id = #{id} and passwd = #{passwd}
  	</select> 

  	<select id="getMember" resultType="mdto">
  		select
  			no,
	  		grade_name,
	  		id,
	  		passwd,
	  		name,
	  		email,
	  		phone,
	  		gender,
  			role
  		from member
  	</select>
  	<select id="getMemberInfo" parameterType="String" resultType="mdto">
  		select
	  		grade_name,
	  		id,
	  		passwd,
	  		nick_name,
	  		name,
	  		email,
	  		phone,
	  		gender,
  			role
  		from member
  		where
  			id = #{id}
  	</select>
  	<!-- Booking -->
	<select id="getBookingList" parameterType="String" resultType="bdto">
		select 	
			b.no ,res_no ,mem_no ,date1 ,date2 ,content ,price ,status ,menu
		 from 
		 	booking b inner join member m on b.mem_no = m.no
		 where
		 	m.id = #{id}
	</select>

	<!-- Review -->
	<select id="getReviewList" parameterType="String" resultType="revdto">
		select 
			no, res_no, mem_no, mem_id, date1, rating, content 
		from 
			review 
		where
			mem_id = #{id}
	</select>
	<!-- Favorite -->

  	<select id="getFavoriteList" parameterType="String" resultType="resdto">
	  	select 
	  		r.name 
	  	from 
	  		restaurant r where no IN
				(select 
					res_no 
				from 
					favorites f join member m on f.mem_no = m.no and m.id = #{id})
	</select>
	<!-- Qna -->
	<select id="getQnaList" parameterType="String" resultType="qdto">
		select 	
			q.no, mem_no, subject, contents, q.createdate, qnatype
		 from 
		 	qna q join member m on q.mem_no = m.no
		 where
		 	m.id = #{id}
	</select>
  	<select id="nick_nameCheck" resultType="Integer">
        select count(nick_name) from member where nick_name = #{nick_name} and no != #{no}
     </select>
  	
  	 <select id="emailCheck" resultType="int">
        select count(email) from member where email = #{email} and no != #{no}
     </select>
  	 <select id="phoneCheck" resultType="int">
        select count(phone) from member where phone = #{phone} and no != #{no}
     </select>
  	<update id="updateMember">
	update member set
			nick_name = #{nick_name},
  			phone = #{phone},
  			passwd = #{passwd},
  			email = #{email}
	where not exists
		(select nick_name, phone, passwd, email
		from
			(select nick_name, phone, email
			from member where no != #{no})
			where nick_name = #{nick_name} or phone = #{phone} or email =#{email})
	and no = #{no}
  	</update>
  	<!-- Booking -->
	<select id="getMyBookingList" parameterType="Integer" resultType="map">
		select 	
			b.no ,b.res_no ,date1 ,date2 ,content ,price ,status, r.name, receipt_url
		 from 
		 	booking b JOIN restaurant r ON b.res_no = r.no
		 where
		 	b.mem_no = #{mem_no}
		 order by b.no desc
	</select>

	<!-- Review -->
	<select id="getMyReviewList" parameterType="Integer" resultType="map">
		select 
			r.no, res.name, r.mem_no, r.mem_id, r.date1, r.rating, r.content, r.res_no
		from 
			review r JOIN restaurant res ON r.res_no = res.no
		where
			r.mem_no = #{mem_no}
		order by r.no desc
	</select>
	<!-- Favorite -->

  	<select id="getMyFavoriteList" parameterType="Integer" resultType="resdto">
	  	select 
	  		r.name,r.no 
	  	from 
	  		restaurant r where no IN
				(select 
					res_no 
				from 
					favorites where mem_no = #{mem_no})
		 order by no asc
	</select>
	<!-- Qna -->
	<select id="getMyQnaList" parameterType="Integer" resultType="qdto">
		select 	
			no, mem_no, subject, contents, createdate, qnatype
		 from 
		 	qna
		 where
		 	mem_no = #{mem_no}
	</select>
	<!-- Member(메뉴바 쪽에 있는 이름, 회원가입 날짜) -->
	<select id="getMemberList" resultType="mdto">
		select 
			no, grade_name, id, passwd, name, email, phone, gender, role, info_offering, nick_name, createdate, image 
		from
			member
		where
			id = #{id}
	</select>
	<select id="getMyAct" parameterType="Integer" resultType="madto">
      select count(distinct r.no) rcnt, count(distinct b.no) bcnt, count(distinct f.res_no) fcnt from member m left outer join review r on m.no = r.mem_no
        left outer join booking b on m.no = b.mem_no left outer join favorites f on m.no = f.mem_no
        where m.no = #{no}
   </select>
	
</mapper>